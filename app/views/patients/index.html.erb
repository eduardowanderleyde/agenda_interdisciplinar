<% if notice.present? %>
  <p class="text-green-700 bg-green-100 px-4 py-2 rounded mb-4"><%= notice %></p>
<% end %>


<div class="max-w-5xl mx-auto py-8">
  <div class="flex items-center justify-between mb-8">
    <h1 class="text-4xl font-bold text-gray-900">Pacientes</h1>
    <%= link_to "+ Novo Paciente", new_patient_path, class: "bg-indigo-600 hover:bg-indigo-700 text-white font-semibold px-5 py-2 rounded shadow" %>
  </div>
  <div class="bg-white rounded-xl shadow overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome</th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Data de Nascimento</th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Responsável</th>
          <th class="text-center font-bold px-4 py-3">Selecionar para agenda</th>
          <th class="px-6 py-3"></th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-100">
        <% @patients.each do |patient| %>
          <tr>
            <td class="px-6 py-4 whitespace-nowrap font-semibold text-gray-800"><%= patient.name %></td>
            <td class="px-6 py-4 whitespace-nowrap text-gray-700"><%= l(patient.birthdate, format: :default, locale: :'pt-BR') %></td>
            <td class="px-6 py-4 whitespace-nowrap text-gray-700"><%= patient.responsible.presence || '-' %></td>
            <td class="px-4 py-4 text-center">
              <%= check_box_tag "selected_for_schedule_#{patient.id}", 1, patient.selected_for_schedule, data: { patient_id: patient.id }, class: "select-for-schedule-patient h-5 w-5 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" %>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <%= link_to "Ver detalhes", patient, class: "bg-white border border-gray-300 rounded px-3 py-1 text-sm font-medium text-gray-900 hover:bg-gray-50" %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
  <div class="mt-4">
      <%= raw(pagy_bootstrap_nav(@pagy)) %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.available-this-week-checkbox').forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
      const patientId = this.dataset.patientId;
      const checked = this.checked ? 1 : 0;
      const feedback = document.getElementById(`saved-feedback-${patientId}`);
      const originalState = this.checked;
      this.disabled = true;
      if (feedback) {
        feedback.textContent = 'Salvando...';
        feedback.style.color = '#2563eb'; // azul
        feedback.style.display = 'inline';
      }
      const csrfTokenMeta = document.querySelector('meta[name="csrf-token"]');
      if (!csrfTokenMeta) {
        alert('CSRF token não encontrado!');
        this.disabled = false;
        return;
      }
      fetch(`/patients/${patientId}/available_this_week`, {
        method: 'PATCH',
        headers: {
          'X-CSRF-Token': csrfTokenMeta.content,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ available_this_week: checked })
      }).then(response => {
        if (!response.ok) throw new Error('Erro ao salvar!');
        if (feedback) {
          feedback.textContent = 'Salvo!';
          feedback.style.color = '#16a34a'; // verde
          setTimeout(() => { feedback.style.display = 'none'; }, 1200);
        }
      }).catch(() => {
        this.checked = !originalState; // volta ao estado anterior
        if (feedback) {
          feedback.textContent = 'Erro ao salvar!';
          feedback.style.color = '#dc2626'; // vermelho
          setTimeout(() => { feedback.style.display = 'none'; }, 2000);
        }
        alert('Erro ao salvar disponibilidade. Tente novamente.');
      }).finally(() => {
        this.disabled = false;
      });
    });
  });

  // Event delegation para garantir que funcione após recarregamentos parciais
  document.body.addEventListener('change', function(event) {
    if (event.target.classList.contains('select-for-schedule-patient')) {
      console.log('Checkbox clicado!');
      const checkbox = event.target;
      const patientId = checkbox.dataset.patientId;
      const checked = checkbox.checked ? 1 : 0;
      const previousValue = !checkbox.checked;
      const actionText = checked ? 'marcar' : 'desmarcar';
      if (!confirm(`Você quer mesmo ${actionText} este paciente para a agenda?`)) {
        // Se cancelar, volta ao estado anterior
        checkbox.checked = previousValue;
        return;
      }
      fetch(`/patients/${patientId}/select_for_schedule`, {
        method: 'PATCH',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ selected_for_schedule: checked })
      });
    }
  });
});
</script>
